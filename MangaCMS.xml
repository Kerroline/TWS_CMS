<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MangaCMS</name>
    </assembly>
    <members>
        <member name="M:MangaCMS.Controllers.V1.ChapterController.GetAllFromManga(System.Int32)">
             <summary>
             Get all chapters for current manga.
             </summary>
             <param name="MangaID"></param>
             <returns>List Charpters of this Manga</returns>
             <remarks>
             Sample request:
            
                 POST /GetForManga/1
                 {
                    "MangaID" : 1
                 }
            
             </remarks>
             <response code="200">Returns the list chapters</response>
             /// <response code="204">If chapters is null</response>
             <response code="400">If the manga not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.ChapterController.CreateChapter(MangaCMS.Models.ChapterModel)">
             <summary>
             Creates a new Project.
             </summary>
             <param name="MangaID"></param>
             <param name="Chapter"></param>
             <returns>A newly created project ID</returns>
             <remarks>
             Sample request:
            
                 POST /Create
                 {
                    ...
                 }
            
             </remarks>
             <response code="204">If successful created </response>
             <response code="400">If the model invalid or manga not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.ChapterController.Edit(System.Int32,MangaCMS.Models.StatusModel)">
             <summary>
             Edit a exist chapter
             </summary>
             <param name="Status"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                    "StatusName": "newName"
                 }
            
             </remarks>
             <response code="204">If the status is created</response>
             <response code="400">If the status is exist or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.ChapterController.Delete(System.Int32)">
             <summary>
             Delete a exist status
             </summary>
             <param name="Status"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                    "StatusName": "newName"
                 }
            
             </remarks>
             <response code="204">If the status is created</response>
             <response code="400">If the status is exist or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.GenreController.GetAll">
             <summary>
             Get all genres
             </summary>
             <returns></returns>
             <remarks>
             Sample request:
            
                 GET /GetAll
                 {
                 }
            
             </remarks>
             <response code="200">List of Genres</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.GenreController.GetOnce(System.Int32)">
             <summary>
             Get once genre.
             </summary>
             <returns></returns>
             <remarks>
             Sample request:
            
                 GET /GetOnce/1
                 {
                 }
            
             </remarks>
             <response code="200">Genre by id</response>
             <response code="400">Genre is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.GenreController.Create(MangaCMS.Models.GenreModel)">
             <summary>
             Creates a new Genre.
             </summary>
             <param name="Genre"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /Create
                 {
                    "GenreName": "Name"
                 }
            
             </remarks>
             <response code="204">If the genre is created</response>
             <response code="400">If the genre is exist or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.GenreController.Edit(System.Int32,MangaCMS.Models.GenreModel)">
             <summary>
             Edit an exist genre
             </summary>
             <param name="id"></param>
             <param name="genre"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                    "GenreName": "newName"
                 }
            
             </remarks>
             <response code="204">If the genre is update</response>
             <response code="400">If the genre is not found or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.GenreController.Delete(System.Int32)">
             <summary>
             Delete an exist genre
             </summary>
             <param name="id"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 DELETE /Delete/1
                 {
                 }
            
             </remarks>
             <response code="204">If the status is deleted</response>
             <response code="400">If the status is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.MangaController.GetAll">
             <summary>
             Get all mangas
             </summary>
             <returns>All mangas in database</returns>
             <remarks>
             Sample request:
            
                 GET /GetAll
                 {
                 }
            
             </remarks>
             <response code="200">List of Mangas</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.MangaController.GetByID(System.Int32)">
             <summary>
             Get once manga.
             </summary>
             <returns></returns>
             <remarks>
             Sample request:
            
                 GET /Get/1
                 {
                 }
            
             </remarks>
             <response code="200">A manga by id</response>
             <response code="400">If a manga is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.MangaController.CreateMangaWithoutPoster(MangaCMS.Models.MangaModel)">
             <summary>
             Creates a new Project.
             </summary>
             <param name="Manga"></param>
             <returns>A newly created project ID</returns>
             <remarks>
             Sample request:
            
                 POST /Create
                 {
                     "japanName": "Kore wa hon",
                     "russianName": "Это книга",
                     "englishName": "This is book",
                     "link": "http.readmanga.",
                     "year": 2000,
                     "author": "Watakushi",
                     "description": "This story ... ",
                     "statusID": 1,
                 }        
            
             </remarks>
             <response code="201">Returns the newly created item ID</response>
             <response code="400">If the project is exist</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.MangaController.Edit(System.Int32,MangaCMS.Models.MangaModel)">
             <summary>
             Edit a exist status
             </summary>
             <param name="mangaID">Manga ID in URL</param>
             <param name="newManga">Manga with new field value</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                     "japanName": "Kore wa hon",
                     "russianName": "Это книга",
                     "englishName": "This is book",
                     "link": "http.readmanga.",
                     "year": 2000,
                     "author": "Watakushi",
                     "description": "This story ... ",
                     "statusID": 1,
                 }
            
             </remarks>
             <response code="200">If the manga was updated</response>
             <response code="400">If a manga is not found or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.MangaController.Delete(System.Int32)">
             <summary>
             Delete an exist manga
             </summary>
             <param name="mangaID">MangaID in URL</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 Delete /Delete/1
                 {
                 }
            
             </remarks>
             <response code="204">If the manga was deleted</response>
             <response code="400">If the manga is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PagesController.CreatePages(System.Int32,Microsoft.AspNetCore.Http.IFormFileCollection)">
             <summary>
             Upload pages (images) to chapter
             </summary>
             <param name="chapterID">Chapter ID</param>
             <param name="pages">Collection of images </param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Create
                 {
                    "chapterID": 1
                    "pages" []: file.png,file.png, ... file.png
                 }
            
             </remarks>
             <response code="204">If poster upload</response>
             <response code="400">If poster not sended or manga not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.GetAll(System.Int32)">
             <summary>
             Get all upload poster to the current manga
             </summary>
             <param name="mangaID">Manga ID in URL</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 Get /GetAll/1
                 {
                 }
            
             </remarks>
             <response code="200">List of String path to poster</response>
             <response code="400">If a manga is not found or has not posters</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.GetByID(System.Int32)">
             <summary>
             Get a poster by ID
             </summary>
             <param name="posterID">Poster ID in URL</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 Get /GetByID/1
                 {
                 }
            
             </remarks>
             <response code="200">List of String path to poster</response>
             <response code="400">If a manga is not found or has not posters</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.GetOnce(System.Int32)">
             <summary>
             Get last upload poster to the current manga
             </summary>
             <param name="mangaID">Manga ID in URL</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 Get /GetLast/1
                 {
                 }
            
             </remarks>
             <response code="200">String path to poster</response>
             <response code="400">If a manga is not found or has not posters</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.UploadPosterToManga(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
             <summary>
             Upload a poster to manga.
             </summary>
             <param name="mangaID">Manga ID in URL</param>
             <param name="image">Poster image</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /Create
                 {
                    "mangaID": 1
                    "image": file.png
                 }
            
             </remarks>
             <response code="201">If a poster is upload</response>
             <response code="400">If poster not sended or manga not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.EditByID(System.Int32,System.Int32)">
             <summary>
             Change manga for this poster
             </summary>
             <param name="posterID">Poster ID in URL</param>
             /// <param name="mangaID">Poster image</param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /EditByID/1
                 {
                    "mangaID": 1
                 }
            
             </remarks>
             <response code="201">If a manga was changed</response>
             <response code="400">If poster is not found or manga is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.PosterController.Delete(System.Int32)">
             <summary>
             Delete an exist poster
             </summary>
             <param name="id"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 DELETE /Delete/1
                 {
                 }
            
             </remarks>
             <response code="204">If the poster was deleted</response>
             <response code="400">If the poster is not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.StatusController.GetAll">
             <summary>
             Get all statuses.
             </summary>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /GetAll
                 {
                 }
            
             </remarks>
             <response code="200">List of Statuses</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.StatusController.Get(System.Int32)">
             <summary>
             Get once status.
             </summary>
             <returns></returns>
             <remarks>
             Sample request:
            
                 GET /Get/1
                 {
                 }
            
             </remarks>
             <response code="200">Status by id</response>
             /// <response code="400">Status not found</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.StatusController.Create(MangaCMS.Models.StatusModel)">
             <summary>
             Creates a new Status.
             </summary>
             <param name="status"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /Create
                 {
                    "StatusName": "Name"
                 }
            
             </remarks>
             <response code="204">If the status is created</response>
             <response code="400">If the status is exist or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.StatusController.Edit(System.Int32,MangaCMS.Models.StatusModel)">
             <summary>
             Edit a exist status
             </summary>
             <param name="Status"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                    "StatusName": "newName"
                 }
            
             </remarks>
             <response code="204">If the status is created</response>
             <response code="400">If the status is exist or model invalid</response>
        </member>
        <member name="M:MangaCMS.Controllers.V1.StatusController.Delete(System.Int32)">
             <summary>
             Delete a exist status
             </summary>
             <param name="Status"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 PUT /Edit/1
                 {
                    "StatusName": "newName"
                 }
            
             </remarks>
             <response code="204">If the status is created</response>
             <response code="400">If the status is exist or model invalid</response>
        </member>
    </members>
</doc>
